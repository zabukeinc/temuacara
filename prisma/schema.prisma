generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing"]
  binaryTargets   = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Permission {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("permissions")
}

model Role {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("roles")
}

model User {
  id String @id @default(cuid())

  // basic information
  name        String
  email       String? @unique @db.Char(50)
  phone       String? @db.Char(14)
  password    String
  reset_token String? @db.Text

  // address
  country     String?
  province    String?
  state       String?
  city        String?
  village     String?
  postal_code String?

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  talks Talk[]

  @@index([email], name: "email_index")
  @@map("users")
}

model UserRole {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("user_roles")
}

model UserRolePermission {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("user_role_permissions")
}

model UserProfile {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("user_profiles")
}

model UserLog {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("user_logs")
}

enum TalkEnum {
  PRE_MARITAL
  POST_MARITAL
}

model Talk {
  id                Int       @id @default(autoincrement())
  question          String
  suggestion        String
  answered_by_groom Boolean
  answered_by_bride Boolean
  asked_by_groom    Boolean
  asked_by_bride    Boolean
  is_groom_answerd  Boolean?
  is_bride_answerd  Boolean?
  answer_notes      String?
  type              TalkEnum
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  answered_at       DateTime?
  deleted_at        DateTime?
  user_id           String?
  user              User?     @relation(fields: [user_id], references: [id])

  @@index([question], name: "question_index")
  @@map("talks")
}
